#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module Flock
    module Priority
      Low = 1
      Medium = 2
      High = 3
      VALUE_MAP = {1 => "Low", 2 => "Medium", 3 => "High"}
      VALID_VALUES = Set.new([Low, Medium, High]).freeze
    end

    class FlockException < ::Thrift::Exception
      include ::Thrift::Struct
      def initialize(message=nil)
        super()
        self.description = message
      end

      def message; description end

      DESCRIPTION = 1

      ::Thrift::Struct.field_accessor self, :description
      FIELDS = {
        DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

    class Results
      include ::Thrift::Struct
      IDS = 1
      NEXT_CURSOR = 2
      PREV_CURSOR = 3

      ::Thrift::Struct.field_accessor self, :ids, :next_cursor, :prev_cursor
      FIELDS = {
        IDS => {:type => ::Thrift::Types::STRING, :name => 'ids'},
        NEXT_CURSOR => {:type => ::Thrift::Types::I64, :name => 'next_cursor'},
        PREV_CURSOR => {:type => ::Thrift::Types::I64, :name => 'prev_cursor'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

    class Page
      include ::Thrift::Struct
      COUNT = 1
      CURSOR = 2

      ::Thrift::Struct.field_accessor self, :count, :cursor
      FIELDS = {
        COUNT => {:type => ::Thrift::Types::I32, :name => 'count'},
        CURSOR => {:type => ::Thrift::Types::I64, :name => 'cursor'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

    class ShardInfo
      include ::Thrift::Struct
      CLASS_NAME = 1
      TABLE_PREFIX = 2
      HOSTNAME = 3
      SOURCE_TYPE = 4
      DESTINATION_TYPE = 5
      BUSY = 6
      SHARD_ID = 7

      ::Thrift::Struct.field_accessor self, :class_name, :table_prefix, :hostname, :source_type, :destination_type, :busy, :shard_id
      FIELDS = {
        CLASS_NAME => {:type => ::Thrift::Types::STRING, :name => 'class_name'},
        TABLE_PREFIX => {:type => ::Thrift::Types::STRING, :name => 'table_prefix'},
        HOSTNAME => {:type => ::Thrift::Types::STRING, :name => 'hostname'},
        SOURCE_TYPE => {:type => ::Thrift::Types::STRING, :name => 'source_type'},
        DESTINATION_TYPE => {:type => ::Thrift::Types::STRING, :name => 'destination_type'},
        BUSY => {:type => ::Thrift::Types::I32, :name => 'busy'},
        SHARD_ID => {:type => ::Thrift::Types::I32, :name => 'shard_id'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

    class ShardMigration
      include ::Thrift::Struct
      SOURCE_SHARD_ID = 1
      DESTINATION_SHARD_ID = 2
      REPLICATING_SHARD_ID = 3
      WRITE_ONLY_SHARD_ID = 4

      ::Thrift::Struct.field_accessor self, :source_shard_id, :destination_shard_id, :replicating_shard_id, :write_only_shard_id
      FIELDS = {
        SOURCE_SHARD_ID => {:type => ::Thrift::Types::I32, :name => 'source_shard_id'},
        DESTINATION_SHARD_ID => {:type => ::Thrift::Types::I32, :name => 'destination_shard_id'},
        REPLICATING_SHARD_ID => {:type => ::Thrift::Types::I32, :name => 'replicating_shard_id'},
        WRITE_ONLY_SHARD_ID => {:type => ::Thrift::Types::I32, :name => 'write_only_shard_id'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

    class ShardChild
      include ::Thrift::Struct
      SHARD_ID = 1
      POSITION = 2
      WEIGHT = 3

      ::Thrift::Struct.field_accessor self, :shard_id, :position, :weight
      FIELDS = {
        SHARD_ID => {:type => ::Thrift::Types::I32, :name => 'shard_id'},
        POSITION => {:type => ::Thrift::Types::I32, :name => 'position'},
        WEIGHT => {:type => ::Thrift::Types::I32, :name => 'weight'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

    class Forwarding
      include ::Thrift::Struct
      TABLE_ID = 1
      BASE_ID = 2
      SHARD_ID = 3

      ::Thrift::Struct.field_accessor self, :table_id, :base_id, :shard_id
      FIELDS = {
        TABLE_ID => {:type => ::Thrift::Types::LIST, :name => 'table_id', :element => {:type => ::Thrift::Types::I32}},
        BASE_ID => {:type => ::Thrift::Types::I64, :name => 'base_id'},
        SHARD_ID => {:type => ::Thrift::Types::I32, :name => 'shard_id'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

  end
